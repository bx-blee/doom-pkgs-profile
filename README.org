
#+TITLE: pkgs-profile

=pkgs-profile= is a general purpose profiles-manager that facilitates
installation of a consistent set of
pinned packages based on their commitHash through straight.el.

* Summary

=pkgs-profile= sits on top of =straight.el= and ~straight-use-package~ and
installs packages that are pre-specified at a desired commitHash and labeled
with a =pkgsProfileName= through straight's ~straight-current-profile~
machinary.

The full consistent set of
pinned packages prefixed with *b:pkgsProfile:collection:* is passed to
straight through an ~advice-add~  around ~straight--lockfile-read-all~

Based on this, straight package installs are managed with =pkgs-profile= and as a result the set remains
consistent and stable.

The complete set of consitent packages is specified as a list of tupples (alist) in the form of
(pkgName . commitHash) consistent with the type of the result of ~(straight--lockfile-read-all)~.

Each b:pkgsProfile:<setName>:<subSet> is such an alist. =blee3:pkgs-profile=
(https://github.com/bx-blee/blee3-pkgs-profile) emacs package uses
=pkgs-profile= through specification of  *b:pkgsProfile:collection:*.

In this case, =blee3:pkgs-profile= sits on top of =pkgs-profile= which sits on top of =straight.el=.

=blee3:pkgs-profile= binds itself to  =pkgs-profile=, through:
#+begin_src emacs-lisp
   (setq b:pkgsProfile:collection:default b:pkgsProfile:collection:blee3)
   (setq b:pkgsProfile:orphan 'b:pkgsProfile:blee3:orphan)
   (b:pkgsProfile:collection|prepare)
   (b:pkgsProfile:collection:straight--lockfile-read-all|advice-add)
#+end_src

There after, a given package at a specific commitHash which is specified in one of the
*b:pkgsProfile:blee3:* profiles included in *b:pkgsProfile:collection:blee3* collection
can very conveniently be installed, like so:
#+begin_src emacs-lisp
(straight-use-package 'packageName)
#+end_src

This results in obataining

In terms of parallels between emacs's this packaging model and debian's
packaging model one can consider:

| Debian Apt Model                           | Emacs-pkgs-profile Model         |
| dpkg                                       | straight                         |
| apt                                        | pkgs-profile + straight          |
| /etc/apt/sources.list                      | b:pkgsProfile:collection:default |
| deb http://deb.debian.org/debian/ bullseye | blee3:pkgs-profile               |

Emacs' packaging model has not been well thought through.
=pkgs-profile= is an attempt at evolving that model.
https://github.com/bx-blee
=straight.el= also introduces the concept of profiles. But the concept of
b:packagesProfile:<set> is different from that of straight's.
We use ~(straight-freeze-versions)~ and the resulting ~/versions/file.el~
for verification and development of b:pkgsProfile:collection.

* About pkgs-profile, blee3-pkgs-profile, Blee, BISOS and ByStar

pkgs-profile and blee3-pkgs-profile are part of Blee (BISOS, Libre-Halaal Emacs Environment).
https://github.com/bx-blee

Blee is integrated with BISOS --- (The Universal BISOS: ByStar Internet Services Operating System)
http://www.by-star.net/PLPC/180047

BISOS facilitates development of The Libre-Halaal By* (ByStar) Digital Ecosystem.
ByStar is a unified and non-proprietary, autonomy and privacy oriented digital ecosystem.
http://www.by-star.net/

So, it is an understatement to say that =pkgs-profile= is part of a much bigger picture.

The broader domain of =pkgs-profile= is that of a "Git Oriented Profiles Packages Management Framework"

* BISOS & Blee's Git Oriented Profiled Packages Management Framework

Based on key experiences of the past two decades, and in particular the lessons
learned from Debian's packaging system and uses of git as a version referenceable
file system; certain expectations have evolved for packages management framework.

** Key Expected Characteristics Of Profiled Package Management Frameworks

The following characterisics are expected:

- Provide a stable and reproducible environment based on specified profiles.
- Allow for evolution of packages without impacting exisiting profiles.
- Provision of mapping of all source and binary packages to git repos.
- Universal reference to packages as git repos and commmitHashes --- allowing
  for unofficial development and adoption of packages.
- Convenient packaging standards.
- Convenience in extending profiles.

** Overview Of A Generalized  Profiled Packages Management Framework

Picture comes here and we walk through it.

** Key Concepts:

Refering to the above model and framework and in the specific context of Blee
packages, we enumerate the following concepts.

*** Profiles Aware Package Manager --- b:pkg:straight+straight.el

We have evolved straight.el in a variety of ways so that it can properly
function as a profiles aware package manager.

At a minimum, we hope that straight.el developers would consider:

- =pkgs-profile=  modification involve addition of ~advice-add~ around an internal function:
~straight--lockfile-read-all~. This needs to be cleaned up and revisited.

- Addition of :ref keyword as in https://github.com/radian-software/straight.el/issues/246
needs to be revisited in light of =pkgs-profile=. How is :ref to deal with dependencies?
In =pkgs-profile=, the :ref of the package and its dependencies are pre-specified.

- Concept and purpose of straight-profiles and b:pkgsProfile: are different.
These need to be aligned.

- straight.el needs to provide needed interfaces to accept b:pkgsProfile:collection-s as input.

*** Packages Profiles

A list of package-names pinned at specific commitHash-s, which create consistent and stable sets.

Similar to a line entry in /etc/apt/sources.list.

*** Profiles Manager --- pkgs-profile As A Pure Layer On Top Of straight.el

A "Profiles Manager" inputs profile collections to the "Profiles Aware Package Manager".

Right now pkgs-profile and straight.el are somewhat intertwined.
We should move towards

*** <<Profiles Collections>>

A list of Packages Profiles which aim to create a consistent and stable totality.

Similar to the full /etc/apt/sources.list.

*** Packages Selections

a number of packages from the totality of [[Profiles Collections]].
